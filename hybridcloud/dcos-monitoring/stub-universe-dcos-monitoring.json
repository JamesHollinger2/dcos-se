{
  "packages": [
    {
      "packagingVersion": "4.0",
      "upgradesFrom": [
        "*"
      ],
      "downgradesTo": [
        "*"
      ],
      "minDcosReleaseVersion": "1.12",
      "name": "dcos-monitoring",
      "version": "v0.3.0",
      "maintainer": "support@mesosphere.io",
      "description": "An example implementation of a stateful service using the DC/OS SDK",
      "selected": false,
      "framework": true,
      "tags": [
        "logging",
        "monitoring",
        "prometheus",
        "grafana"
      ],
      "preInstallNotes": "This DC/OS Service is currently in preview.",
      "postInstallNotes": "Package dcos-monitoring is being installed!\n\n\tDocumentation: https://docs.mesosphere.com/service-docs/dcos-monitoring/\n\tIssues: https://docs.mesosphere.com/support/",
      "postUninstallNotes": "Package dcos-monitoring is being uninstalled.",
      "releaseVersion": 0,
      "config": {
        "type": "object",
        "properties": {
          "service": {
            "type": "object",
            "description": "DC/OS service configuration properties",
            "properties": {
              "name": {
                "description": "The name of the service instance",
                "type": "string",
                "default": "dcos-monitoring"
              },
              "user": {
                "description": "The user that the service will run as.",
                "type": "string",
                "default": "nobody"
              },
              "service_account": {
                "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of the Mesos framework.",
                "type": "string",
                "default": ""
              },
              "service_account_secret": {
                "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
                "type": "string",
                "default": ""
              },
              "log_level": {
                "description": "The log level for the DC/OS service.",
                "type": "string",
                "enum": [
                  "OFF",
                  "FATAL",
                  "ERROR",
                  "WARN",
                  "INFO",
                  "DEBUG",
                  "TRACE",
                  "ALL"
                ],
                "default": "INFO"
              }
            }
          },
          "prometheus": {
            "description": "Prometheus configuration properties",
            "type": "object",
            "properties": {
              "cpus": {
                "description": "Prometheus pod CPU requirements",
                "type": "number",
                "default": 2.0
              },
              "mem": {
                "description": "Prometheus pod mem requirements (in MB)",
                "type": "integer",
                "default": 4096
              },
              "volume": {
                "description": "Prometheus volume requirements",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of persistent volume to use, one of ROOT or MOUNT",
                    "type": "string",
                    "default": "ROOT",
                    "enum": [
                      "ROOT",
                      "MOUNT"
                    ]
                  },
                  "size": {
                    "description": "The size of the persistent volume in MB",
                    "type": "integer",
                    "default": 25000,
                    "minimum": 2000
                  }
                }
              },
              "interval": {
                "description": "Master scrape interval",
                "type": "number",
                "default": 30
              },
              "timeout": {
                "description": "Master scrape timeout",
                "type": "number",
                "default": 25
              },
              "dcos_metrics_node_port": {
                "description": "Port where to scrape dcos-metrics in each node",
                "type": "number",
                "default": 61091
              },
              "rule_urls_csv": {
                "description": "List of alert rules file urls as csv",
                "type": "string"
              }
            },
            "required": [
              "cpus",
              "mem"
            ]
          },
          "grafana": {
            "description": "Grafana configuration properties",
            "type": "object",
            "properties": {
              "cpus": {
                "description": "Grafana pod CPU requirements",
                "type": "number",
                "default": 2.0
              },
              "mem": {
                "description": "Grafana pod mem requirements (in MB)",
                "type": "integer",
                "default": 4096
              },
              "data_volume": {
                "description": "Grafana data volume requirements",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of persistent volume to use, one of ROOT or MOUNT",
                    "type": "string",
                    "default": "ROOT",
                    "enum": [
                      "ROOT",
                      "MOUNT"
                    ]
                  },
                  "size": {
                    "description": "The size of the persistent volume in MB",
                    "type": "integer",
                    "default": 512,
                    "minimum": 50
                  }
                }
              },
              "ui_port": {
                "description": "The port to connect to the Grafana UI",
                "type": "integer",
                "default": 3000
              },
              "admin_router_proxy": {
                "description": "Whether to use Admin Router as the proxy to access Grafana UI",
                "type": "boolean",
                "default": true
              },
              "public": {
                "description": "Whether the Grafana instance will be deployed on a public agent or not.",
                "type": "boolean",
                "default": false
              },
              "admin_credentials": {
                "description": "Username/password for the admin user",
                "type": "object",
                "properties": {
                  "username": {
                    "title": "Secret for username",
                    "description": "Secret name for username of the admin user",
                    "type": "string"
                  },
                  "password": {
                    "title": "Secret for password",
                    "description": "Secret name for password of the admin user",
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              },
              "placement_constraints": {
                "type": "string",
                "description": "The Marathon-style placement constraints string controlling Grafana server placement",
                "default": "",
                "media": {
                  "type": "application/x-zone-constraints+json"
                }
              },
              "default_dashboards": {
                "description": "Whether to load default Grafana dashboards associated with this package",
                "type": "boolean",
                "default": true
              },
              "dashboard_config_repository": {
                "description": "Repository for Grafana dashboard configs",
                "type": "object",
                "properties": {
                  "url": {
                    "description": "The URL to the git repository",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path in the repository to load configs from (e.g., /, /foo)",
                    "type": "string"
                  },
                  "reference_name": {
                    "description": "Git repository reference name (e.g., refs/heads/master)",
                    "type": "string"
                  },
                  "credentials": {
                    "oneOf": [
                      {
                        "description": "Username/password for accessing the repository",
                        "type": "object",
                        "properties": {
                          "username": {
                            "title": "Secret for username",
                            "description": "Secret name for username of the repository",
                            "type": "string"
                          },
                          "password": {
                            "title": "Secret for password (or API token)",
                            "description": "Secret name for password (or API token) of the repository",
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      {
                        "description": "Deploy key for accessing the repository",
                        "type": "object",
                        "properties": {
                          "deploy_key": {
                            "description": "Secret name for the deploy key",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deploy_key"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "url",
                  "path"
                ]
              }
            },
            "required": [
              "cpus",
              "mem"
            ]
          },
          "alertmanager": {
            "description": "Alertmanager settings",
            "type": "object",
            "properties": {
              "secrets": {
                "description": "Secrets that will be used by Alertmanager",
                "type": "object",
                "properties": {
                  "slack_api_url": {
                    "description": "Slack webhook url",
                    "type": "string"
                  }
                }
              },
              "config_repository": {
                "description": "Repository for Alertmanager configs",
                "type": "object",
                "properties": {
                  "url": {
                    "description": "The URL to the git repository",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path in the repository to load configs from (e.g., /, /foo)",
                    "type": "string"
                  },
                  "credentials": {
                    "oneOf": [
                      {
                        "description": "Credentials for accessing the repository",
                        "type": "object",
                        "properties": {
                          "username": {
                            "title": "Secret for username",
                            "description": "Secret name for username of the repository",
                            "type": "string"
                          },
                          "password": {
                            "title": "Secret for password (or API token)",
                            "description": "Secret name for password (or API token) of the repository",
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      {
                        "description": "Deploy key for accessing the repository",
                        "type": "object",
                        "properties": {
                          "deploy_key": {
                            "description": "Secret name for the deploy key",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deploy_key"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "url",
                  "path"
                ]
              }
            },
            "required": [
              "config_repository"
            ]
          }
        }
      },
      "marathon": {
        "v2AppMustacheTemplate": ""
      },
      "resource": {
        "assets": {
          "container": {
            "docker": {
              "pushgateway": "prom/pushgateway:v0.5.2",
              "grafana": "grafana/grafana:5.3.4",
              "nginx": "nginx:1.15.7"
            }
          },
          "uris": {
            "jre-tar-gz": "https://downloads.mesosphere.com/java/server-jre-8u172-linux-x64.tar.gz",
            "libmesos-bundle-tar-gz": "https://downloads.mesosphere.com/libmesos-bundle/libmesos-bundle-1.11.0.tar.gz",
            "scheduler-zip": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/scheduler.zip",
            "bootstrap-zip": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.54.1/bootstrap.zip",
            "scheduler-assets-tar-gz": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/scheduler-assets.tar.gz",
            "prometheus-tar-gz": "https://downloads.mesosphere.com/prometheus/assets/prometheus-2.2.1.linux-amd64.tar.gz",
            "discovery-helper": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/discovery-helper.zip",
            "dashboard-refresher": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/dashboard-refresher.zip",
            "alertmanager-config": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/alertmanager-config.zip",
            "fetcher": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/fetcher.zip",
            "update-alerts-uri": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/update-alerts.sh",
            "default-dashboards-tar-gz": "https://observability-artifacts.s3.amazonaws.com/releases/dcos-monitoring/v0.3.0/default-dashboards.tar.gz",
            "alertmanager-tar-gz": "https://github.com/prometheus/alertmanager/releases/download/v0.15.2/alertmanager-0.15.2.linux-amd64.tar.gz"
          }
        },
        "images": {
          "icon-small": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-small.png?raw=true",
          "icon-medium": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-medium.png?raw=true",
          "icon-large": "https://github.com/dcos/dcos-ui/blob/master/plugins/services/src/img/icon-service-default-large.png?raw=true"
        },
        "cli": {
          "binaries": {
            "darwin": {
              "x86-64": {
                "contentHash": [
                  {
                    "algo": "sha256",
                    "value": "ff64d0088bf11bb9cbd84a2ecb50374e6a40d26383a9c065f36eebd34bafc212"
                  }
                ],
                "kind": "executable",
                "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.54.1/dcos-service-cli-darwin"
              }
            },
            "linux": {
              "x86-64": {
                "contentHash": [
                  {
                    "algo": "sha256",
                    "value": "8a6acffeddc2248200ca4e94f0b5f1c73d8caebae006c20a5af022b51d694e1a"
                  }
                ],
                "kind": "executable",
                "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.54.1/dcos-service-cli-linux"
              }
            },
            "windows": {
              "x86-64": {
                "contentHash": [
                  {
                    "algo": "sha256",
                    "value": "b447a6973792a9029cc0707640a912aa7c82c2ec511442907ec038dfae2a3afd"
                  }
                ],
                "kind": "executable",
                "url": "https://downloads.mesosphere.com/dcos-commons/artifacts/0.54.1/dcos-service-cli.exe"
              }
            }
          }
        }
      }
    }
  ]
}
